class Solution {
public:
    double findMedianSortedArrays(vector<int>& A, vector<int>& B) {
        int m = A.size(), n = B.size();
        if(m>n){
            vector<int> t = A;
            A = B;
            B = t;
            m = A.size();
            n = B.size();
        }
        int l=0, r=m, mid=(m+n+1)/2;
        while(l<=r){
            int i = l + (r-l)/2;
            int j = mid - i;
            if(i<r && B[j-1]>A[i])
                l = i+1;
            else if(i>l && A[i-1]>B[j])
                r = i-1;
            else{
                int ml = 0;
                if(!i)  ml = B[j-1];
                else if(!j) ml = A[i-1];
                else    ml = A[i-1]>B[j-1]?A[i-1]:B[j-1];
                if((m+n)&1) return ml;
                
                int mr = 0;
                if(i==m)    mr = B[j];
                else if(j==n)   mr = A[i];
                else    mr = A[i]<B[j]?A[i]:B[j];
                
                return (ml+mr)/2.0;
            }
        }
        return 0.0;
    }
};
